<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SNMP Traps</title>
    <style>
        /* Starry background with gradient */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: radial-gradient(circle, rgba(18,24,56,1) 0%, rgba(14,18,35,1) 100%);
            color: #c5c6c7;
        }

        h1 {
            color: #00fff3;
            font-size: 2.5rem;
            text-align: center;
            margin-bottom: 20px;
            text-shadow: 2px 2px 20px rgba(0, 255, 243, 0.7);
        }

        table {
            width: 80%;
            border-collapse: collapse;
            background-color: #0b0c10;
            border: 1px solid #45a29e;
            margin-bottom: 20px;
            text-align: left;
            word-wrap: break-word;
            table-layout: fixed;
            box-shadow: 0px 4px 20px rgba(0, 255, 243, 0.2);
            border-radius: 10px;
            overflow: hidden;
        }

        th, td {
            padding: 15px;
            border-bottom: 1px solid #45a29e;
        }

        th {
            background-color: #1f2833;
            color: #66fcf1;
            font-size: 1.2rem;
            text-align: center;
        }

        td {
            color: #c5c6c7;
            font-size: 1rem;
            text-align: center;
            word-wrap: break-word; /* Ensure long text breaks properly */
        }

        #countdown {
            margin-top: 10px;
            font-size: 1.5rem;
            color: #66fcf1;
        }

        /* Button Styling */
        button {
            font-size: 1.5rem;
            padding: 15px 30px;
            color: #fff;
            background: linear-gradient(90deg, rgba(0,255,247,1) 0%, rgba(0,160,255,1) 100%);
            border-radius: 50px;
            border: none;
            cursor: pointer;
            box-shadow: 0px 4px 15px rgba(0, 255, 243, 0.4);
            transition: all 0.4s ease-in-out;
        }

        button:hover {
            background: linear-gradient(90deg, rgba(255,0,255,1) 0%, rgba(160,0,255,1) 100%);
            box-shadow: 0px 4px 20px rgba(255, 0, 255, 0.6);
            transform: scale(1.1);
        }

        /* Navigation buttons */
        ul {
            list-style: none;
            padding: 0;
            display: flex;
            justify-content: center;
            gap: 20px;
        }

        a {
            text-decoration: none;
        }

        /* Background stars animation */
        .stars {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background: transparent url('https://www.script-tutorials.com/demos/360/images/stars.png') repeat;
            z-index: -1;
            animation: moveStars 100s linear infinite;
        }

        @keyframes moveStars {
            from { background-position: 0 0; }
            to { background-position: -10000px 5000px; }
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            table {
                width: 95%;
            }
            h1 {
                font-size: 2rem;
            }
            button {
                font-size: 1.2rem;
                padding: 10px 20px;
            }
        }
    </style>

    <script>
        window.onload = function() {
            let timeLeft = 10; // Time in seconds for countdown

            // Create the countdown element
            const countdownElement = document.createElement('div');
            countdownElement.id = 'countdown';
            countdownElement.innerText = `Refreshing in ${timeLeft} seconds...`;
            document.body.appendChild(countdownElement);

            // Function to update the countdown every second
            const countdown = setInterval(function() {
                timeLeft--;
                countdownElement.innerText = `Refreshing in ${timeLeft} seconds...`;

                // Reload the page when the countdown reaches 0
                if (timeLeft <= 0) {
                    clearInterval(countdown);
                    window.location.reload();
                }
            }, 1000); // Countdown updates every second
        };
    </script>
</head>
<body>
    <!-- Background stars animation -->
    <div class="stars"></div>

    <h1>Received SNMP Traps</h1>

    <table>
        <thead>
            <tr>
                <th>Source IP</th>
                <th>Message (Hexadecimal)</th>
                <th>Message (ASCII)</th>
            </tr>
        </thead>
        <tbody>
            <% if (traps.length === 0) { %>
                <tr>
                    <td colspan="3">No traps received yet.</td>
                </tr>
            <% } else { %>
                <% traps.forEach(trap => { %>
                <tr>
                    <td><%= trap.source %></td>
                    <td><%= trap.decodedMessage.messageHex %></td>
                    <td><%= trap.decodedMessage.messageAscii %></td>
                </tr>
                <% }) %>
            <% } %>
        </tbody>
    </table>

    <!-- Countdown display -->
    <div id="countdown"></div>

    <!-- Navigation buttons -->
    <ul>
        <li><a href="http://localhost:8080"><button>Go to HOMEPAGE</button></a></li>
        <li><a href="http://localhost:2000"><button>Go to BULK</button></a></li>
        <li><a href="http://localhost:3000"><button>Go to SET</button></a></li>
        <li><a href="http://localhost:1000"><button>Go to GET</button></a></li>
        <li><a href="http://localhost:5000"><button>Go to LOG</button></a></li>
    </ul>
</body>
</html>
